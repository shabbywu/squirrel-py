name: Wheels

on:
  workflow_dispatch:
    inputs:
      do-publish:
        description: "publish to pypi when build successfully"
        required: true
        type: boolean
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        path: dist/*.tar.gz
        name: sdist


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - uses: lukka/get-cmake@latest
      if: matrix.os != 'ubuntu-latest'
    - name: Setup anew (or from cache) vcpkg (and does not build any package)
      if: matrix.os != 'ubuntu-latest'
      uses: lukka/run-vcpkg@v11 # Always specify the specific _version_ of the
                                # action you need, `v11` in this case to stay up
                                # to date with fixes on the v11 branch.

    - uses: pypa/cibuildwheel@v3.0
      env:
        CIBW_SKIP: pp* *_i686 *musllinux*
        MACOSX_DEPLOYMENT_TARGET: 10.14
        CMAKE_POLICY_VERSION_MINIMUM: 3.5

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: wheelhouse/*.whl
        name: wheelhouse-${{ matrix.os }}


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published' || ${{ inputs.do-publish == 'true'}}

    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
